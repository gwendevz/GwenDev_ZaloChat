import axios from "axios";
import fs from "fs/promises";
import path from "path";
import { Logger, log } from "../../Utils/Logger.js";

export default {
  name: "ff",
  description: "Xem th√¥ng tin t√†i kho·∫£n Free Fire",
  role: 0,
  cooldown: 5,
  group: "game",
  aliases: [
    "freefire", "th√¥ng tin freefire", "ff info", "xem ff", "uid ff"
  ],

  async run({ message, api, args }) {
    const threadId   = message.threadId;
    const threadType = message.type;

    const uid = args[0]?.trim();
    if (!uid) {
      return api.sendMessage("‚ö†Ô∏è Vui l√≤ng nh·∫≠p UID Free Fire!", threadId, threadType);
    }

    const region   = "vn";
    const infoURL  = `https://zrojectx-info-free-fire.vercel.app/player-info-zprojectx?uid=${uid}&region=${region}`;
    const imageURL = `https://jnl-outfit-v4.vercel.app/outfit-image?uid=${uid}&region=${region}&key=Dev-JNL`;

    try {
      const { data } = await axios.get(infoURL, { timeout: 10_000 });

      if (!data?.basicInfo) {
        throw new Error("Kh√¥ng t√¨m th·∫•y th√¥ng tin t√†i kho·∫£n ho·∫∑c UID kh√¥ng h·ª£p l·ªá.");
      }

      const basicInfo  = data.basicInfo  || {};
      const petInfo    = data.petInfo    || {};
      const socialInfo = data.socialInfo || {};

      const name        = basicInfo.nickname        || "Kh√¥ng r√µ";
      const level       = basicInfo.level           || "N/A";
      const exp         = basicInfo.exp             || 0;
      const likes       = basicInfo.liked           || 0;
      const rankPoints  = basicInfo.rankingPoints   || 0; // ƒêi·ªÉm rank
      const season      = basicInfo.seasonId        || "N/A";
      const badge       = basicInfo.badgeId         || "N/A";

      let gender = "Kh√¥ng r√µ";
      if (typeof socialInfo.gender === "string") {
        if (socialInfo.gender.includes("MALE"))   gender = "Nam";
        if (socialInfo.gender.includes("FEMALE")) gender = "N·ªØ";
      }

      const petName  = petInfo.name   || "Kh√¥ng c√≥";
      const petLevel = petInfo.level  || "N/A";
      const petSkin  = petInfo.skinId || "N/A";

      const msg =
`üéÆ ùóßùóõ√îùó°ùóö ùóßùóúùó° ùóß√Äùóú ùóûùóõùó¢·∫¢ùó° ùóôùó•ùóòùóò ùóôùóúùó•ùóò üéÆ\n` +
`üë§ T√™n: ${name}\n` +
`üÜî UID: ${uid}\n` +
`‚≠ê Level: ${level} (EXP: ${exp})\n` +
`‚ù§Ô∏è L∆∞·ª£t th√≠ch: ${likes}\n` +
`üèÖ ƒêi·ªÉm Rank: ${rankPoints}\n` +
`üìõ Season: ${season}\n` +
`üéñÔ∏è Badge ID: ${badge}\n` +
`üöª Gi·ªõi t√≠nh: ${gender}\n` +
`üê∂ Pet: ${petName} (Level ${petLevel}) | Skin: ${petSkin}\n` +
`üåç Khu v·ª±c: ${basicInfo.region || "VN"}\n` +
`üì¶ Phi√™n b·∫£n: ${basicInfo.releaseVersion || "N/A"}`;

      const outfitRes = await axios.get(imageURL, { responseType: "arraybuffer", timeout: 10_000 });

      const cacheDir = path.resolve("Data", "Cache");
      await fs.mkdir(cacheDir, { recursive: true });

      const filePath = path.join(cacheDir, `ff_${uid}_${Date.now()}.png`);
      await fs.writeFile(filePath, outfitRes.data);

      await api.sendMessage({
        msg: msg,
        attachments: [filePath],
        ttl: 120_000
      }, threadId, threadType);

      await fs.unlink(filePath).catch(() => {});

    } catch (err) {
      log(`L·ªói khi l·∫•y th√¥ng tin Free Fire: ${err.message || err}`, "error");

      if (err.message?.includes("Kh√¥ng t√¨m th·∫•y")) {
        return api.sendMessage("‚ùå Kh√¥ng t√¨m th·∫•y th√¥ng tin t√†i kho·∫£n. Vui l√≤ng ki·ªÉm tra l·∫°i UID.", threadId, threadType);
      }
      return api.sendMessage("‚ùå C√≥ l·ªói x·∫£y ra khi l·∫•y th√¥ng tin. Vui l√≤ng th·ª≠ l·∫°i sau.", threadId, threadType);
    }
  }
};
